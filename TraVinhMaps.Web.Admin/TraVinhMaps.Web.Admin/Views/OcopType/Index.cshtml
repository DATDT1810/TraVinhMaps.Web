@using TraVinhMaps.Web.Admin.Models.OcopType;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model IEnumerable<OcopTypeResponse>;
@{
    ViewData["Title"] = "Ocop Type Management";
}

<div class="page-body">
    <div class="container-fluid">
        <div class="page-title">
            <div class="row">
                <div class="col-6">
                    <h4>@ViewData["Title"]</h4>
                </div>
                @{
                    var breadcrumbs = ViewData["Breadcrumb"] as List<BreadcrumbItem>;
                }
                @if (breadcrumbs != null)
                {
                    @await Html.PartialAsync("_Breadcrumb", breadcrumbs)
                }
            </div>
        </div>
    </div>
    @if (TempData["ErrorMessage"] != null)
    {
        <div id="alert-message" class="alert alert-danger">
            @TempData["ErrorMessage"]
        </div>
    }

    @if (TempData["SuccessMessage"] != null)
    {
        <div id="alert-message" class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }
    <!-- Container-fluid starts-->
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex justify-content-between mb-3">
                            <div>
                                <a asp-controller="OcopType" asp-action="CreateOcopType" class="btn btn-success">
                                    <i class="fa fa-plus me-1"></i>Create Ocop Type
                                </a>
                                <button class="btn btn-primary" id="exportOcopTypeBtn">
                                    <i class="fa fa-file-excel-o me-1"></i>Export
                                </button>
                            </div>
                        </div>
                        <div class="table-responsive signal-table custom-scrollbar">
                            <table class="display" id="project-status">
                                <thead class="bg-primary">
                                    <tr>
                                        <th>No.</th>
                                        <th>Ocop Type Name</th>
                                        <th>Created At</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        int count = 1;
                                    }
                                    @foreach (var item in Model)
                                    {
                                        <tr class="user-removes">
                                            <td>@count</td>
                                            <td>
                                                @item.OcopTypeName
                                            </td>
                                        <td>
                                            @item.CreatedAt.ToLocalTime().ToString("dd/MM/yy, HH:mm")
                                        </td>

                                            <td class="text-center align-middle">
                                                <ul>
                                                    <li>
                                                        <a class="edit" asp-controller="OcopType" asp-action="UpdateOcopType"
                                                            asp-route-id="@item.Id"><i class="fa fa-pencil"></i> </a>
                                                    </li>
                                                </ul>
                                            </td>
                                        </tr>
                                        count++;
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Container-fluid Ends-->
</div>

@section Scripts {
    @Html.AntiForgeryToken()
    <!-- Add SheetJS libraries for Excel export -->
    <script src="https://cdn.jsdelivr.net/npm/xlsx@0.18.5/dist/xlsx.full.min.js"></script>
    <script src="~/assets/js/sweetalert-custom.js"></script>
    <script src="~/assets/js/ocoptype/index.js"></script>
    <script>
        (function () {
            const success = @Html.Raw(Json.Serialize(TempData["Success"]));
            const error = @Html.Raw(Json.Serialize(TempData["Error"]));
            if (success) showSuccessAlert("Success!", success);
            if (error) showErrorAlert("Error!", error);
        })();

        setTimeout(function () {
            var alert = document.getElementById("alert-message");
            if (alert) {
                alert.style.display = "none";
            }
        }, 1000);
    </script>
}
