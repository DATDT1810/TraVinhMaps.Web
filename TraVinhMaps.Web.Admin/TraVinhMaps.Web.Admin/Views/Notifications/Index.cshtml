@using TraVinhMaps.Web.Admin.Helper
@using TraVinhMaps.Web.Admin.Models.Notifications;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model IEnumerable<NotificationResponse>;
@{
    ViewData["Title"] = "Notification List";
}

<div>
    <div class="page-body">
    <div class="container-fluid">
        <div class="page-title">
            <div class="row">
                <div class="col-6">
                    <h4>@ViewData["Title"]</h4>
                </div>
                @{
                    var breadcrumbs = ViewData["Breadcrumb"] as List<BreadcrumbItem>;
                }
                @if (breadcrumbs != null)
                {
                    @await Html.PartialAsync("_Breadcrumb", breadcrumbs)
                }
            </div>
        </div>
    </div>
    <!-- Container-fluid starts-->
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex justify-content-between mb-3">
                            <button class="btn btn-export" title="Export Notifications List" id="notificationExportBtn">
                                <i class="fa fa-file-excel-o me-1"></i>Export
                            </button>
                            <a asp-controller="Notifications" asp-action="SendNotification" class="btn btn-success">
                                <i class="fa fa-plus me-1"></i>Send Notification
                            </a>
                        </div>
                    <div class="table-responsive custom-scrollbar">
                        <table class="display" id="basic-9">
                            <thead class="bg-primary">
                                <tr>
                                    <th>No.</th>
                                    <th>Title</th>
                                    <th>Content</th>
                                    <th>Create At</th>
                                    <th class="no-sort text-center">Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    int count = 1;
                                }
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>@count</td>
                                        <td>@Html.Raw(item.Title)</td>
                                        <td>@Html.TruncateWords(item.Content, 12)</td>
                                        <td>@item.CreatedAt.ToLocalTime().ToString("dd/MM/yy, HH:mm")</td>
                                    <td>
                                        <ul class="action d-flex justify-content-center align-items-center">
                                            <li class="details"> <a asp-controller="Notifications" asp-action="Details"
                                                    asp-route-id="@item.Id" title="Details"><i class="fa fa-eye"
                                                        aria-hidden="true"></i></a></li>
                                        </ul>
                                    </td>
                                </tr>
                                                                count++;
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
</div>
<!-- Container-fluid Ends-->

@section Scripts {
    @Html.AntiForgeryToken()
    <script src="~/assets/js/sweetalert-custom.js"></script>
    <script src="~/assets/js/notifications/sendnotification.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const successMessage = @Html.Raw(Json.Serialize(TempData["NotificationSuccess"]));
            const errorMessage = @Html.Raw(Json.Serialize(TempData["NotificationError"]));

            if (successMessage) {
                showTimedAlert("Success!", successMessage, "success", 1000);
            } else if (errorMessage) {
                showTimedAlert("Error!", errorMessage, "error", 1000);
            }
        });
    </script>
}