@model TraVinhMaps.Web.Admin.Models.Auth.LoginViewModel
@{
    ViewData["Title"] = "Login";
    Layout = "";
}
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="keywords"
      content="TraVinhGo.The Most App For Your Trip">
<meta name="author" content="pixelstrap">
<link rel="icon" href="~/assets/images/faticon.png" type="image/x-icon">
<link rel="shortcut icon" href="~/assets/images/faticon.png" type="image/x-icon">
<title>TraVinhGo</title>
<!-- Google font-->
<link rel="preconnect" href="https://fonts.googleapis.com/">
<link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin="">
<link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@200;300;400;500;600;700;800&display=swap"
      rel="stylesheet">
<link rel="stylesheet" type="text/css" href="~/assets/css/font-awesome.css">
<!-- ico-font-->
<link rel="stylesheet" type="text/css" href="~/assets/css/vendors/icofont.css">
<!-- Themify icon-->
<link rel="stylesheet" type="text/css" href="~/assets/css/vendors/themify.css">
<!-- Flag icon-->
<link rel="stylesheet" type="text/css" href="~/assets/css/vendors/flag-icon.css">
<!-- Feather icon-->
<link rel="stylesheet" type="text/css" href="~/assets/css/vendors/feather-icon.css">
<!-- Plugins css start-->
<!-- Plugins css Ends-->
<!-- Bootstrap css-->
<link rel="stylesheet" type="text/css" href="~/assets/css/vendors/bootstrap.css">
<!-- App css-->
<link rel="stylesheet" type="text/css" href="~/assets/css/style.css">
<link id="color" rel="stylesheet" href="~/assets/css/color-1.css" media="screen">
<!-- Responsive css-->
<link rel="stylesheet" type="text/css" href="~/assets/css/responsive.css">

<style>
    body {
        margin: 0;
        padding: 0;
        font-family: 'Montserrat', sans-serif;
        background-image: url('@(Url.Content("~/assets/images/login/bg_2.png"))');
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        height: 100vh;
    }

    .login-section {
        display: flex;
        height: 100%;
        width: 100%;
        align-items: center;
        justify-content: flex-end;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
    }

    .login-card {     
        padding: 30px;
        border-radius: 20px;
        width: 100%;
        max-width: 450px;
        margin-right: 10%;
        margin-left: 10%;
      
    }

    .login-main h4 {
        font-weight: 700;
        font-size: 24px;
        margin-bottom: 5px;
        
    }

    .login-main p {
        color: #888;
        margin-bottom: 20px;
        font-size: 14px;
    }

    .form-group {
        margin-bottom: 0.9rem;
    }

    .form-group .col-form-label {
        font-weight: 600;
        color: #333;
    }

    .form-control {
        border-radius: 8px;
        border: 1px solid #ddd;
        padding: 10px 15px;
        background-color: #f7f7f7;
    }

    .form-control:focus {
        background-color: #fff;
        border-color: #80bdff;
        box-shadow: none;
    }

    .btn-success {
        background-color: #2c3e50;
        border-color: #2c3e50;
        border-radius: 8px;
        padding: 10px;
        font-weight: 600;
    }

    .btn-success:hover {
        background-color: #34495e;
        border-color: #34495e;
    }

    .link {
        color: #2c3e50;
        font-weight: 600;
    }

    .google-btn {
        background-color: #fff;
        color: #757575;
        border: 1px solid #ddd;
        box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        border-radius: 8px;
        font-family: 'Roboto', sans-serif;
        font-weight: 500;
        text-align: center;
        transition: background-color 0.2s;
        width: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 10px 24px;
    }

    .google-btn:hover {
        background-color: #f8f8f8;
        box-shadow: 0 1px 3px rgba(0,0,0,0.2);
    }

    .google-btn i {
        color: red;
        font-size: 18px;
    }

    .separator {
        display: flex;
        align-items: center;
        text-align: center;
        margin: 15px 0;
    }

    .separator::before,
    .separator::after {
        content: '';
        flex: 1;
        border-bottom: 1px solid #e0e0e0;
    }

    .separator span {
        padding: 0 10px;
        color: #999;
        font-size: 0.875rem;
        font-weight: 500;
    }


    .checkbox.p-0 {
        flex-basis: auto;
        display: flex;
        align-items: center;
        gap: 0.4rem;
    }

    .checkbox.p-0 input[type="checkbox"] {
        margin: 0; /* Reset default margin */
    }

    a.link {
        flex-basis: auto;
        text-align: right;
    }


</style>

<!-- login page start-->
<section class="login-section">
    <div class="login-card">
        <div>
            <div class="login-main">
                <form asp-action="login" asp-controller="Authen" class="theme-form">
                    @Html.AntiForgeryToken()
                    <h4>Sign in to account</h4>
                    <p>Enter your email & password to login</p>

                    <div class="form-group">
                        <label asp-for="Identifier" class="col-form-label">Email or Phone Number</label>
                        <input asp-for="Identifier" class="form-control" placeholder="Please fill here">
                        <span asp-validation-for="Identifier" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Password" class="col-form-label">Password</label>
                        <div class="form-input position-relative">
                            <input asp-for="Password" class="form-control" placeholder="*********" type="password">
                            <div class="show-hide"><span class="show"></span></div>
                            <span asp-validation-for="Password" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="checkbox p-0" style="margin-top: 11px;">
                                <input asp-for="RememberMe" id="checkbox1" type="checkbox" style="margin-bottom: 5px;">
                                <label asp-for="RememberMe" class="text-muted" for="checkbox1">Remember password</label>
                            </div>
                            <a class="link" asp-action="ForgotPassword">Forgot password?</a>
                        </div>
                    </div>
                    <div class="form-group mb-0 mt-3">
                        <button class="btn btn-success btn-block w-100" type="submit">Sign in</button>
                    </div>

                    <div class="separator">
                        <span>Or Sign in with</span>
                    </div>

                    <div class="social mt-4">
                        <div class="btn-showcase">
                            <a class="btn btn-light google-btn" asp-action="LoginWithGoogle">
                                <i class="fa fa-google me-2"></i>Google
                            </a>
                        </div>
                    </div>

                    <script>
                        (function () {
                          'use strict';
                          window.addEventListener('load', function () {
                            // Fetch all the forms we want to apply custom Bootstrap validation styles to
                            var forms = document.getElementsByClassName('needs-validation');
                            // Loop over them and prevent submission
                            var validation = Array.prototype.filter.call(forms, function (form) {
                              form.addEventListener('submit', function (event) {
                                if (form.checkValidity() === false) {
                                  event.preventDefault();
                                  event.stopPropagation();
                                }
                                form.classList.add('was-validated');
                              }, false);
                            });
                          }, false);
                        })();
                    </script>
                </form>
            </div>
        </div>
    </div>
</section>
<!-- latest jquery-->
<script src="~/assets/js/jquery.min.js"></script>
<!-- Bootstrap js-->
<script src="~/assets/js/bootstrap/bootstrap.bundle.min.js"></script>
<!-- feather icon js-->
<script src="~/assets/js/icons/feather-icon/feather.min.js"></script>
<script src="~/assets/js/icons/feather-icon/feather-icon.js"></script>
<!-- scrollbar js-->
<!-- Sidebar jquery-->
<script src="~/assets/js/config.js"></script>

<!-- SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="~/assets/js/sweetalert-custom.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const showHideBtn = document.querySelector('.show-hide');
        const passwordField = document.querySelector('input[type="password"]');

        if (showHideBtn && passwordField) {
            showHideBtn.addEventListener('click', function() {
                if (passwordField.type === 'password') {
                    passwordField.type = 'text';
                    showHideBtn.querySelector('span').classList.remove('show');
                    showHideBtn.querySelector('span').classList.add('hide');
                } else {
                    passwordField.type = 'password';
                    showHideBtn.querySelector('span').classList.remove('hide');
                    showHideBtn.querySelector('span').classList.add('show');
                }
            });
        }

        @if (TempData["ErrorMessage"] != null)
        {
                <text>
                showTimedAlert("Login Failed", "@TempData["ErrorMessage"]", "error", 1000);
                </text>
        }

        @if (TempData["SuccessMessage"] != null)
        {
                <text>
                showTimedAlert("Success", "@TempData["SuccessMessage"]", "success", 1000);
                </text>
        }

        @if (ViewData.ModelState[""] != null && ViewData.ModelState[""].Errors.Count > 0)
        {
                <text>
                showTimedAlert("Login Failed", "@Html.Raw(ViewData.ModelState[""].Errors[0].ErrorMessage)", "error", 1000);
                </text>
        }
    });
</script>
