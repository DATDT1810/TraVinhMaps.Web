@using TraVinhMaps.Web.Admin.Models.TouristDestination
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers;
@model UpdateDestinationViewRequest;
@inject IConfiguration Configuration
@{
    ViewData["Title"] = "Edit Destination";
}

<style>
    #searchAddressBtn {
        background-color: #28a745;
        color: white;
        border-color: #28a745;
    }

    #searchAddressBtn:hover {
        background-color: #218838;
        border-color: #1e7e34;
    }

    .input-group:focus-within #searchAddressBtn {
        z-index: 4;
        border-color: #86b7fe; 
    }

    .form-select.text-truncate {
        padding-right: 2.25rem; 
    }

    .price-options {
        display: flex;
        gap: 1rem;
        margin-bottom: 1rem;
    }

    .price-option {
        flex: 1;
        padding: 0.7rem;
        border: 1px solid #ced4da;
        border-radius: 0.375rem;
        text-align: center;
        cursor: pointer;
        transition: all 0.2s ease-in-out;
    }

    .price-option.active {
        background-color: #28A745;
        color: white;
        border-color: #28A745;
    }

    .price-option i {
        font-size: 1.5rem;
        display: block;
        margin-bottom: 0.5rem;
    }

    .ck-editor__editable {
        padding: 0.5rem 1.5rem !important;
    }

    .image-gallery-container {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        margin-top: 1rem;
    }

    .gallery-item {
        position: relative;
        width: 120px;
        height: 120px;
    }

    .gallery-item img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 8px;
    }

    .delete-button {
        position: absolute;
        top: 5px;
        right: 5px;
        background-color: rgba(0, 0, 0, 0.6);
        color: white;
        border: none;
        border-radius: 50%;
        width: 24px;
        height: 24px;
        font-size: 14px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
    }

    .add-image-box {
        width: 120px;
        height: 120px;
        display: flex;
        align-items: center;
        justify-content: center;
        border: 2px dashed #ced4da;
        border-radius: 8px;
        cursor: pointer;
        font-size: 2rem;
        color: #ced4da;
    }
</style>

<div class="page-body">
    <div class="container-fluid">
        <div class="page-title">
            <div class="row">
                <div class="col-6">
                    <h4>Edit Destination</h4>
                    @if (ViewBag.error != null)
                    {
                        <span class="text-danger">@ViewBag.error</span>
                    }
                </div>
                <div class="col-6">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index"><i class="fa fa-home"
                                    style="font-size: 20px;"></i></a></li>
                        <li class="breadcrumb-item"><a asp-action="Index">Destination Management</a></li>
                        <li class="breadcrumb-item active">Edit Destination </li>
                    </ol>
                </div>
            </div>
        </div>
    </div>
    <!-- Container-fluid starts-->
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-body">
                        <div class="form theme-form">
                            <form asp-action="EditDestination" method="post" enctype="multipart/form-data" id="mainEditForm">
                                @Html.AntiForgeryToken()
                                <div class="row">
                                    <div class="col-lg-8">
                                        <div id="map" class="here-map-container"
                                             data-latitude="@Model.latitude.ToString(System.Globalization.CultureInfo.InvariantCulture)"
                                             data-longitude="@Model.longitude.ToString(System.Globalization.CultureInfo.InvariantCulture)"
                                             style="width: 100%; height: 500px; background-color: #f0f0f0; border-radius: 10px; position: relative;">
                                        </div>
                                        <br />
                                        <div class="mb-3">
                                            <label>Address Destination</label>
                                            <div style="position: relative;">
                                                <div class="input-group">
                                                    <textarea asp-for="Address" class="form-control"
                                                              placeholder="Address of destination" autocomplete="off" rows="2"></textarea>
                                                    <button class="btn btn-outline-secondary" type="button" id="searchAddressBtn"><i class="fa fa-search"></i> Search</button>
                                                </div>
                                                <div id="addressSuggestions" class="list-group" style="position: absolute; z-index: 1056; width: 100%; max-height: 220px; overflow-y: auto;"></div>
                                            </div>
                                            <span asp-validation-for="Address" class="text-danger"></span>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="mb-3">
                                                    <label>Latitude</label>
                                                    <input asp-for="latitude" id="latitude" class="form-control" type="number" step="any"
                                                           placeholder="Latitude of destination" data-language="en" readonly>
                                                    <span asp-validation-for="latitude" class="text-danger"></span>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="mb-3">
                                                    <label>Longitude</label>
                                                    <input asp-for="longitude" id="longitude" class="form-control" type="number" step="any"
                                                           placeholder="Longitude of destination" data-language="en" readonly>
                                                    <span asp-validation-for="longitude" class="text-danger"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="mb-3" style="display:none">
                                            <label>Type Location</label>
                                            <select asp-for="Type" class="form-select" disabled>
                                                <option selected value="Point">Point</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-lg-4">
                                        <div class="mb-3">
                                            <label>Destination Title</label>
                                            <input asp-for="Name" class="form-control" type="text"
                                                   placeholder="Destination title">
                                            <span asp-validation-for="Name" class="text-danger"></span>
                                        </div>
                                        <input readonly hidden asp-for="Id" class="form-control" type="text"
                                               placeholder="Project name *">
                                        <div class="row">
                                            <div class="col-sm-6">
                                                <div class="mb-3">
                                                    <label>Capacity</label>
                                                    <select asp-for="Capacity" class="form-select">
                                                        @for (int i = 10; i < 100; i += 10)
                                                        {
                                                            <option value="@i people">@i people</option>
                                                        }
                                                        @for (int i = 100; i <= 1000; i += 100)
                                                        {
                                                            <option value="@i people">@i people</option>
                                                        }
                                                        <option value="Over 1000 people">Over 1000 people</option>
                                                    </select>
                                                    <span asp-validation-for="Capacity" class="text-danger"></span>
                                                </div>
                                            </div>
                                            <div class="col-sm-6">
                                                <div class="mb-3">
                                                    <label>Destination Type</label>
                                                    <select asp-for="DestinationTypeId" class="form-select text-truncate"
                                                            asp-items="ViewBag.DestinationTypes">
                                                    </select>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-6">
                                                <div class="mb-3">
                                                    <label>Opent Time</label>
                                                    <select asp-for="OpeningHours.OpenTime" id="openTime" class="form-select">
                                                        @for (int i = 0; i < 24; i++)
                                                        {
                                                            var hour = i;
                                                            var ampm = i >= 12 ? "PM" : "AM";
                                                            var hour12 = i % 12;
                                                            if (hour12 == 0) hour12 = 12; // 0 should be 12 for 12 AM and 12 PM
                                                            var timeValue = $"{hour12} {ampm}";
                                                            <option value="@timeValue">@timeValue</option>
                                                        }
                                                    </select>
                                                    <span asp-validation-for="OpeningHours.OpenTime"
                                                          class="text-danger"></span>
                                                </div>
                                            </div>
                                            <div class="col-sm-6">
                                                <div class="mb-3">
                                                    <label>Close Time</label>
                                                    <select asp-for="OpeningHours.CloseTime" id="closeTime" class="form-select">
                                                        @for (int i = 0; i < 24; i++)
                                                        {
                                                            var hour = i;
                                                            var ampm = i >= 12 ? "PM" : "AM";
                                                            var hour12 = i % 12;
                                                            if (hour12 == 0) hour12 = 12;
                                                            var timeValue = $"{hour12} {ampm}";
                                                            <option value="@timeValue">@timeValue</option>
                                                        }
                                                    </select>
                                                    <span asp-validation-for="OpeningHours.CloseTime"
                                                          class="text-danger"></span>
                                                    <span id="timeValidationError" class="text-danger d-block"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="mb-3">
                                            <label>Price</label>
                                            <input asp-for="Ticket" type="hidden" id="ticket-hidden-input" />
                                            <div class="price-options">
                                                <div class="price-option" data-value="Free">
                                                    <i class="fa fa-tag"></i>
                                                    <span>Free Ticket</span>
                                                </div>
                                                <div class="price-option" data-value="Chargeable">
                                                      <i class="fa fa-tag"></i>
                                                    <span>Chargeable</span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="mb-3" id="price-input-container" style="display: none;">
                                            <div class="input-group">
                                                <span class="input-group-text">đ</span>
                                                <input id="price" class="form-control" type="number" placeholder="100000">
                                            </div>
                                        </div>
                                        <div class="mb-3">
                                            <label>Phone</label>
                                            <input asp-for="Contact.Phone" class="form-control" type="tel"
                                                    placeholder="Phone number" data-language-en">
                                            <span asp-validation-for="Contact.Phone" class="text-danger"></span>
                                        </div>
                                        <div class="mb-3">
                                            <label>Email</label>
                                            <input asp-for="Contact.Email" class="form-control" type="email"
                                                    placeholder="Mail address" data-language="en">
                                            <span asp-validation-for="Contact.Email" class="text-danger"></span>
                                        </div>
                                        <div class="mb-3">
                                            <label>Website</label>
                                            <input asp-for="Contact.Website" class="form-control" type="text"
                                                    placeholder="Website" data-language-en">
                                            <span asp-validation-for="Contact.Website"
                                                    class="text-danger"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="row mt-4">
                                    <div class="col-12">
                                        <ul class="nav nav-tabs" id="descriptionTab" role="tablist">
                                            <li class="nav-item" role="presentation">
                                                <button class="nav-link active" id="description-tab-button" data-bs-toggle="tab" data-bs-target="#description-pane" type="button" role="tab" aria-controls="description-pane" aria-selected="true">Description</button>
                                            </li>
                                            <li class="nav-item" role="presentation">
                                                <button class="nav-link" id="history-tab-button" data-bs-toggle="tab" data-bs-target="#history-pane" type="button" role="tab" aria-controls="history-pane" aria-selected="false">History Story</button>
                                            </li>
                                        </ul>
                                        <div class="tab-content" id="descriptionTabContent">
                                            <div class="tab-pane fade show active p-3" id="description-pane" role="tabpanel" aria-labelledby="description-tab-button">
                                                <textarea asp-for="Description" id="descriptionEditor" class="form-control"
                                                          placeholder="Description of destination"
                                                          rows="10"></textarea>
                                                <span asp-validation-for="Description" class="text-danger"></span>
                                                <div class="image-gallery-container">
                                                    @if (Model.Images != null)
                                                    {
                                                        foreach (var imageUrl in Model.Images)
                                                        {
                                                            <div class="gallery-item">
                                                                <img src="@imageUrl" alt="Destination Image" />
                                                                <button type="button" class="delete-button" data-url="@imageUrl" data-action="@Url.Action("DeleteDestinationImageUpdate")">&times;</button>
                                                            </div>
                                                        }
                                                    }
                                                    <div class="add-image-box" id="addImageBox">
                                                        +
                                                    </div>
                                                </div>

                                            </div>
                                            <div class="tab-pane fade p-3" id="history-pane" role="tabpanel" aria-labelledby="history-tab-button">
                                                <textarea asp-for="HistoryStory.Content" id="historyEditor" class="form-control"
                                                          placeholder="History content of destination"
                                                          rows="10"></textarea>
                                                <span asp-validation-for="HistoryStory.Content" class="text-danger"></span>
                                                <div class="image-gallery-container">
                                                   @if (Model.HistoryStory != null && Model.HistoryStory.Images != null)
                                                    {
                                                        foreach (var imageUrl in Model.HistoryStory.Images)
                                                        {
                                                            <div class="gallery-item">
                                                                <img src="@imageUrl" alt="History Image" />
                                                                <button type="button" class="delete-button" data-url="@imageUrl" data-action="@Url.Action("DeleteHistoryDestinationImageUpdate")">&times;</button>
                                                            </div>
                                                        }
                                                    }

                                                    <div class="add-image-box" id="addHistoryImageBox">
                                                        +
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                </div>
                                <div class="row">
                                    <div class="col">
                                        <div class="text-end">
                                            <a asp-action="DetailDestination" asp-route-id="@Model.Id"
                                                class="btn btn-danger">Cancel</a>
                                            <button type="submit" class="btn btn-success me-3">Save Changes</button>
                                        </div>
                                    </div>
                                </div>
                            </form>
                            <form asp-action="AddDestinationImageUpdate" method="post" enctype="multipart/form-data" id="addImageForm" class="d-none">
                                <input type="hidden" name="id" value="@Model.Id" />
                                <input type="file" name="imageDestinationFileList" id="imageUploadInput" multiple onchange="document.getElementById('addImageForm').submit();" />
                            </form>
                            <form asp-action="AddDestinationHistoryImageUpdate" method="post" enctype="multipart/form-data" id="addHistoryImageForm" class="d-none">
                                <input type="hidden" name="id" value="@Model.Id" />
                                <input type="file" name="imageDestinationFileList" id="historyImageUploadInput" multiple onchange="document.getElementById('addHistoryImageForm').submit();" />
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Container-fluid Ends-->
</div>

@section Scripts {
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    
    <!-- CKEditor 5 -->
    <script src="https://cdn.ckeditor.com/ckeditor5/41.4.2/classic/ckeditor.js"></script>

    <!-- HERE Maps API references -->
    <link rel="stylesheet" type="text/css" href="https://js.api.here.com/v3/3.1/mapsjs-ui.css" />
    <script type="text/javascript" src="https://js.api.here.com/v3/3.1/mapsjs-core.js"></script>
    <script type="text/javascript" src="https://js.api.here.com/v3/3.1/mapsjs-service.js"></script>
    <script type="text/javascript" src="https://js.api.here.com/v3/3.1/mapsjs-ui.js"></script>
    <script type="text/javascript" src="https://js.api.here.com/v3/3.1/mapsjs-mapevents.js"></script>
    
    <script>
        // Set the API key for all subsequent scripts to use
        window.HERE_API_KEY = '@Configuration["HEREMAP_API_KEY"]';
    </script>

    <script src="~/assets/js/touristdestination/heremap-edit.js"></script>
    <script src="~/assets/js/touristdestination/heremaps-search.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Listen for the custom 'mapReady' event from our script
            document.addEventListener('mapReady', function () {
                // Once the map is loaded, we can safely attach listeners to the form fields
                document.getElementById('latitude').addEventListener('change', updateMapFromForm);
                document.getElementById('longitude').addEventListener('change', updateMapFromForm);
            });

            const openTimeSelect = document.getElementById('openTime');
            const closeTimeSelect = document.getElementById('closeTime');
            const timeValidationError = document.getElementById('timeValidationError');

            function convertTo24Hour(timeStr) {
                if (!timeStr) return -1;
                const [time, modifier] = timeStr.split(' ');
                let hours = parseInt(time, 10);
                if (modifier === 'PM' && hours < 12) {
                    hours += 12;
                }
                if (modifier === 'AM' && hours === 12) { // Midnight case: 12 AM is 00 hours
                    hours = 0;
                }
                return hours;
            }

            function validateTime() {
                const openHour = convertTo24Hour(openTimeSelect.value);
                const closeHour = convertTo24Hour(closeTimeSelect.value);

                if (openHour >= closeHour) {
                    timeValidationError.textContent = 'Close time must be later than open time.';
                    closeTimeSelect.setCustomValidity('Invalid time range.'); 
                } else {
                    timeValidationError.textContent = '';
                    closeTimeSelect.setCustomValidity('');
                }
            }

            openTimeSelect.addEventListener('change', validateTime);
            closeTimeSelect.addEventListener('change', validateTime);
            validateTime();

            const priceOptions = document.querySelectorAll('.price-option');
            const hiddenTicketInput = document.getElementById('ticket-hidden-input');
            const priceInputContainer = document.getElementById('price-input-container');
            const priceInput = document.getElementById('price');

            function setTicketState(selectedValue) {
                priceOptions.forEach(opt => {
                    opt.classList.toggle('active', opt.dataset.value === selectedValue);
                });

                if (selectedValue === 'Chargeable') {
                    priceInputContainer.style.display = 'block';
                    hiddenTicketInput.value = priceInput.value;
                } else {
                    priceInputContainer.style.display = 'none';
                    hiddenTicketInput.value = 'Free Ticket';
                    priceInput.value = '';
                }
            }

            priceInput.addEventListener('input', () => {
                if (hiddenTicketInput.value !== 'Free Ticket') {
                    hiddenTicketInput.value = priceInput.value;
                }
            });

            // Add click listeners to the price options
            priceOptions.forEach(option => {
                option.addEventListener('click', () => {
                    setTicketState(option.dataset.value);
                });
            });

            // Set initial state on page load
            const initialTicketValue = hiddenTicketInput.value;
            if (initialTicketValue && initialTicketValue !== 'Free Ticket' && !isNaN(initialTicketValue)) {
                priceInput.value = initialTicketValue;
                setTicketState('Chargeable');
            } else {
                setTicketState('Free');
            }
            
            document.getElementById('addImageBox').addEventListener('click', function() {
                document.getElementById('imageUploadInput').click();
            });

            document.getElementById('addHistoryImageBox').addEventListener('click', function() {
                document.getElementById('historyImageUploadInput').click();
            });

            document.querySelectorAll('.delete-button').forEach(button => {
                button.addEventListener('click', function () {
                    const form = document.createElement('form');
                    form.method = 'post';
                    form.action = this.dataset.action;

                    const idInput = document.createElement('input');
                    idInput.type = 'hidden';
                    idInput.name = 'id';
                    idInput.value = '@Model.Id';
                    form.appendChild(idInput);

                    const urlInput = document.createElement('input');
                    urlInput.type = 'hidden';
                    urlInput.name = 'urlImage';
                    urlInput.value = this.dataset.url;
                    form.appendChild(urlInput);

                    const token = document.querySelector('#mainEditForm input[name="__RequestVerificationToken"]');
                    if (token) {
                        form.appendChild(token.cloneNode(true));
                    }

                    document.body.appendChild(form);
                    form.submit();
                });
            });

            // Initialize CKEditor
            const editorConfig = {
                toolbar: {
                    items: [
                        'heading',
                        '|',
                        'bold',
                        'italic',
                        'bulletedList',
                        'numberedList',
                        '|',
                        'outdent',
                        'indent',
                        '|',
                        'blockQuote',
                        'undo',
                        'redo'
                    ]
                },
                language: 'en'
            };

            ClassicEditor
                .create( document.querySelector( '#descriptionEditor' ), editorConfig)
                .catch( error => {
                    console.error( 'Error initializing CKEditor for Description:', error );
                } );

            ClassicEditor
                .create( document.querySelector( '#historyEditor' ), editorConfig)
                .catch( error => {
                    console.error( 'Error initializing CKEditor for History Story:', error );
                } );
        });
    </script>
}
