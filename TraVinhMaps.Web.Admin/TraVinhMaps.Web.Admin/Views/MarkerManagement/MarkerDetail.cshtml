@using TraVinhMaps.Web.Admin.Models.Markers;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers;
@model MarkerResponse
@{
    ViewData["Title"] = "MarkerDetail";
}
<style>
    .add-image-box {
        margin-top: 10px;
        width: 10%;
        height: 80px;
        display: flex;
        align-items: center;
        justify-content: center;
        border: 2px dashed #aaa;
        position: relative;
        cursor: pointer;
        border-radius: 9px;
        background-color: #f8f9fa;
    }

    .upload-placeholder {
        font-size: 48px;
        color: #aaa;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 100%;
        height: 100%;
        cursor: pointer;
    }

    .image-preview {
        max-width: 100%;
        max-height: 120px;
        object-fit: contain;
        border-radius: 8px;
        border: 1px solid #ccc;
        padding: 2px;
    }

    .upload-placeholder:hover {
        background-color: #e0e0e0;
    }
</style>

<div class="page-body">
    <div class="container-fluid">
        <div class="page-title">
            <div class="row">
                <div class="col-6">
                    <h4>Marker Details</h4>
                    @if (ViewBag.error != null)
                    {
                        <span class="text-danger">@ViewBag.error</span>
                    }
                </div>
                <div class="col-6">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">
                                <i class="fa fa-home" style="font-size: 20px;"></i>
                            </a></li>
                        <li class="breadcrumb-item"><a asp-action="Index">Marker Management</a></li>
                        <li class="breadcrumb-item active">Marker Details</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>
    <!-- Container-fluid starts-->
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-body">
                        <div class="form theme-form">
                            <form asp-action="EditMarker" method="post">
                                <div class="row">
                                    <div class="col">
                                        <div class="mb-3">
                                            <input hidden readonly asp-for="Id" type="text">
                                            <label>Marker name</label>
                                            <input asp-for="Name" id="destinationNameInput" class="form-control"
                                                type="text" placeholder="Destination title">
                                            <span asp-validation-for="Name" class="text-danger"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="row" id="editButtonRow" style="display: none;">
                                    <div class="col">
                                        <div class="text-end">
                                            <button type="submit" class="btn btn-success me-3">Edit</button>
                                        </div>
                                    </div>
                                </div>
                                <div>
                                    <img src="@Model.Image" class="img-fluid mb-3"
                                        style="max-width: 200px; max-height: 200px;" alt="Destination Image" />
                                </div>
                            </form>

                            <form asp-action="UpdateMarkerImage" method="post" enctype="multipart/form-data">
                                <div class="row">
                                    <div class="col">
                                        <label>Upload new image marker</label>
                                        <div class="item add-image-box" id="addImageBox">
                                            <div>
                                                <div class="upload-placeholder">+</div>
                                                <input name="markerImage" hidden type="file" accept="image/*"
                                                    id="uploadImageInput" onchange="" />
                                            </div>
                                        </div>

                                        <!-- Hidden inputs -->
                                        <input name="id" type="hidden" value="@Model.Id" />
                                        <input name="oldUrlImage" type="hidden" value="@Model.Image" />

                                        <!-- Di chuyển nút submit ra ngoài addImageBox -->
                                        <div class="mt-3">
                                            <button class="btn btn-success btn-block" type="submit">Submit</button>
                                        </div>
                                        <div class="mt-3">
                                            <a asp-controller="MarkerManagement" asp-action="Index" class="btn btn-danger">Back</a>
                                        </div>
                                    </div>
                                </div>
                            </form>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Container-fluid Ends-->
</div>

@section Scripts {
    @Html.AntiForgeryToken()
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

    <script src="~/assets/js/typeahead/handlebars.js"></script>
    <script src="~/assets/js/sweetalert-custom.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const addBox = document.getElementById("addImageBox");
            const uploadInput = document.getElementById("uploadImageInput");

            const nameInput = document.getElementById("destinationNameInput");
            const editButtonRow = document.getElementById("editButtonRow");

            if (nameInput && editButtonRow) {
                const originalValue = nameInput.value;

                nameInput.addEventListener("input", function () {
                    if (nameInput.value.trim() !== originalValue.trim()) {
                        editButtonRow.style.display = "block";
                    } else {
                        editButtonRow.style.display = "none";
                    }
                });
            }

            if (addBox && uploadInput) {
                addBox.addEventListener("click", function () {
                    uploadInput.click();
                });
            }

            let previewContainer = document.createElement("div");
            previewContainer.classList.add("row", "mt-3", "g-3");
            addBox.parentElement.appendChild(previewContainer);

            uploadInput.addEventListener("change", function () {
                previewContainer.innerHTML = "";

                const files = uploadInput.files;
                if (!files || files.length === 0) return;

                const file = files[0];
                if (file && file.type.startsWith("image/")) {
                    const reader = new FileReader();

                    reader.onload = function (e) {
                        const col = document.createElement("div");
                        col.classList.add("col-sm-3");

                        const itemDiv = document.createElement("div");
                        itemDiv.classList.add("item", "position-relative");

                        const img = document.createElement("img");
                        img.src = e.target.result;
                        img.classList.add("image-preview");

                        itemDiv.appendChild(img);
                        col.appendChild(itemDiv);
                        previewContainer.appendChild(col);
                    };

                    reader.readAsDataURL(file);
                }
            });

            // Hiển thị thông báo thành công hoặc lỗi nếu có TempData
            @if (TempData["successMessage"] != null)
                {
                    <text>
                        showTimedAlert("Success!", "@TempData["successMessage"]", "success", 1000);
                    </text>
            }
                @if (TempData["errorMessage"] != null)
                {
                    <text>
                        showTimedAlert("Error!", "@TempData["errorMessage"]", "error", 1000);
                    </text>
            }
            });
    </script>
}
